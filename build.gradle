group 'JenkinsProject'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'io.qameta.allure'
defaultTasks 'clean', 'test'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.7.0"
    }
}

repositories {
    mavenCentral()
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = "2.7.0"
    aspectjVersion = "1.8.11"
}

configurations {
    agent
}
dependencies {
    agent "org.aspectj:aspectjweaver:1.9.1"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    testImplementation group: 'ru.yandex.qatools.htmlelements', name: 'htmlelements-java', version: '1.20.0'
    testImplementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.7.0'
    testImplementation group: 'ru.yandex.qatools.allure', name: 'allure-testng-adaptor', version: '1.5.4'
    testImplementation group: 'com.qaprosoft', name: 'carina-proxy', version: '6.0.9'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.10.0'
}
test {
    systemProperty 'target.environment', System.getProperty('target.environment')
    useTestNG() {
        suites 'src/test/resources/testing.xml'
    }
}

tasks.withType(Test) {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
    testLogging.showStandardStreams = true
    systemProperty 'target.environment', System.getProperty('target.environment')
    systemProperty 'home.page.url', System.getProperty('home.page.url')
    systemProperty 'allure.results.directory', 'build/allure-results'
}


task generateAllure(type: Exec) {
    workingDir "$projectDir/allure/bin"
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', 'allure.bat', 'generate', '-c', '../../build/allure-results'
    } else {
        commandLine 'bash', '-c', 'allure', 'generate', '-c', "$projectDir/build/allure-results"
    }
}

if (System.getProperty('target.environment') == 'local') {
    tasks.withType(Test)*.finalizedBy generateAllure
}
