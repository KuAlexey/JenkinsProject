plugins {
    id 'java'
}

group 'JenkinsProject'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    agent
}
dependencies {
    agent "org.aspectj:aspectjweaver:1.9.1"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.14.0'
    testImplementation group: 'org.testng', name: 'testng', version: '6.14.3'
    testImplementation group: 'ru.yandex.qatools.htmlelements', name: 'htmlelements-java', version: '1.19'
    testImplementation group: 'io.qameta.allure', name: 'allure-testng', version: '2.7.0'
    testImplementation group: 'ru.yandex.qatools.allure', name: 'allure-testng-adaptor', version: '1.5.4'
    testImplementation group: 'com.qaprosoft', name: 'carina-proxy', version: '6.0.9'
}
test {
    systemProperty 'target.environment', System.getProperty('target.environment')
    useTestNG() {
        suites 'src/test/resources/testing.xml'
    }
}
tasks.withType(Test) {
    doFirst() {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }
}

task generateAllure(type: Exec) {
    workingDir "$projectDir/allure/bin"
    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
        commandLine 'cmd', '/c', 'allure.bat', 'generate', '-c', '../../build/allure-results'
    } else {
        commandLine 'bash', '-c', 'allure', 'generate', '-c', "$projectDir/build/allure-results"
    }
}

if (System.getProperty('target.environment') == 'local') {
    tasks.withType(Test)*.finalizedBy generateAllure
}
